<?php

/*
 * This file is part of the Doctrine-TestSet project created by
 * https://github.com/MacFJA
 *
 * For the full copyright and license information, please view the LICENSE
 * at https://github.com/MacFJA/Doctrine-TestSet
 */

namespace AppBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\HttpFoundation\File\File;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

/**
 * Class Product.
 *
 * @author MacFJA
 *
 * @ORM\Entity
 */
class Product
{
    /**
     * The identifier of the product.
     *
     * @var int
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * The creation date of the product.
     *
     * @var \DateTime
     * @ORM\Column(type="datetime", name="created_at")
     */
    private $createdAt;

    /**
     * The creation date of the product.
     *
     * @var \DateTime
     * @ORM\Column(type="datetime", name="updated_at")
     */
    private $updatedAt;
    /**
     * Indicate if the product is enabled (available in store).
     *
     * @var bool
     * @ORM\Column(type="boolean")
     */
    private $enabled = false;

    /**
     * It only stores the name of the image associated with the product.
     *
     * @ORM\Column(type="string", length=255)
     *
     * @var string
     */
    private $image;

    /**
     * @var \Media
     *
     * @ORM\ManyToOne(targetEntity="Application\Sonata\MediaBundle\Entity\Media", cascade={"persist", "remove", "merge"})
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="image_feature", referencedColumnName="id", nullable=true, onDelete="Set null")
     * })
     */
    private $imageFeature;

    /**
     * The price of the product.
     *
     * @var float
     * @ORM\Column(type="float",name="price")
     */
    private $price = 0.0;
    /**
     * The price of the product.
     *
     * @var float
     * @ORM\Column(type="float",name="price_old")
     */
    private $priceOld = 0.0;

    /**
     * @ORM\Column(type="integer", name="product_type", nullable = true)
     */
    private $productType = 0;
    /**
     * The name of the product.
     *
     * @var string
     * @ORM\Column(type="string",name="name",length=255)
     */
    private $name;
    /**
     * The category alias.
     *
     * @var string
     * @ORM\Column(type="string")
     */
    protected $alias;

    /**
     * @var string
     * @ORM\Column(type="string", length=255,name="description")
     */
    private $description;

    /**
     * The description of the product.
     *
     * @var string
     * @ORM\Column(type="string", length=255,name="type_name")
     */
    private $typeName;

    /**
     * @var text $body
     *
     * @ORM\Column(name="body", type="text", nullable=false)
     */
    protected $body;

    /**
     * The description of the product.
     *
     * @var string
     * @ORM\Column(type="string", length=255,name="meta_description")
     */
    private $metaDescription;

    /**
     * The description of the product.
     *
     * @var string
     * @ORM\Column(type="string", length=255,name="meta_keyword")
     */
    private $metaKeyword;

    /**
     * The description of the product.
     *
     * @var string
     * @ORM\Column(type="string", length=255,name="product_code")
     */
    private $productCode;

    /**
     * The description of the product.
     *
     * @var string
     * @ORM\Column(type="string", length=255,name="specification")
     */
    private $specification;
    /**
     * The description of the product.
     *
     * @var string
     * @ORM\Column(type="string", length=255,name="weights")
     */
    private $weights;
    /**
     * The description of the product.
     *
     * @var string
     * @ORM\Column(type="string", length=255,name="made_in")
     */
    private $madeIn;
    /**
     * List of categories where the products is
     * (Owning side).
     *
     * @var Category[]
     * @ORM\ManyToMany(targetEntity="Category", inversedBy="products")
     * @ORM\JoinTable(name="product_category")
     */
    private $categories;

    /**
     * @var PurchaseItem[]
     * @ORM\OneToMany(targetEntity="PurchaseItem", mappedBy="product", cascade={"remove"})
     */
    private $purchasedItems;
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->updatedAt = new \DateTime('now');
        $this->categories = new \Doctrine\Common\Collections\ArrayCollection();
        $this->purchasedItems = new \Doctrine\Common\Collections\ArrayCollection();
    }
}
